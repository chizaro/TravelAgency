@model TravelAgency.Web.Areas.Admin.Models.Admin.AdminEditViewModel

@{
    ViewBag.Title = "Редактировать пользователя";
    var roleSelectList = new SelectList(Model.Roles, "Id", "Name", Model.RoleId);
}
<div class="container-fluid">
    <h2 class="col mt-3">Изменить данные о пользователе:</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-group">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.EditorFor(model => model.Id)

    <div class="form-group mt-2">
        @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control disabled", @readonly = true } })
        </div>
    </div>

    <div class="form-group mt-2">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            <small>@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })</small>
        </div>
    </div>

    <div class="form-group mt-2">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            <small>@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })</small>
        </div>
    </div>

    <div class="form-group mt-2">
        @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RoleId, roleSelectList, new { @class = "form-control" })
            <small>@Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })</small>
        </div>
    </div>

    @for (int i = 0; i < Model.Roles.Count; i++)
    {
        @Html.HiddenFor(model => Model.Roles[i].Id)
        @Html.HiddenFor(model => Model.Roles[i].Name)
    }

    <div class="form-group">
        <div class="col-10 d-flex">
            <div>
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </div>
    </div>
</div>
    }
</div>


